        -:    0:Source:/mnt/c/Users/rasul/CLionProjects/OOP/Lab1/Tests/source/test_CrosswordSolver.cpp
        -:    0:Graph:/mnt/c/Users/rasul/CLionProjects/OOP/Lab1/cmake-build-debug/Tests/CMakeFiles/Tests.dir/source/test_CrosswordSolver.cpp.gcno
        -:    0:Data:/mnt/c/Users/rasul/CLionProjects/OOP/Lab1/cmake-build-debug/Tests/CMakeFiles/Tests.dir/source/test_CrosswordSolver.cpp.gcda
        -:    0:Runs:1
        -:    1:#include <gtest/gtest.h>
        -:    2:#include "CrosswordSolver/CrosswordSolver.h"
        -:    3:
        -:    4:// Тест на проверку валидности шаблонов
        4:    5:TEST(CrosswordSolverTest, ValidPatternTest) {
       1*:    6:    EXPECT_TRUE(isValidPattern("apple"));
       1*:    7:    EXPECT_TRUE(isValidPattern("?pple"));
       1*:    8:    EXPECT_TRUE(isValidPattern("?????"));
       1*:    9:    EXPECT_FALSE(isValidPattern("app1e"));
       1*:   10:    EXPECT_FALSE(isValidPattern("app e"));
       1*:   11:    EXPECT_FALSE(isValidPattern(""));
        1:   12:}
------------------
_ZN41CrosswordSolverTest_ValidPatternTest_TestC2Ev:
function _ZN41CrosswordSolverTest_ValidPatternTest_TestC2Ev called 1 returned 100% blocks executed 100%
        1:    5:TEST(CrosswordSolverTest, ValidPatternTest) {
        1:    5-block  0
call    0 returned 1
------------------
_ZN41CrosswordSolverTest_ValidPatternTest_TestD0Ev:
function _ZN41CrosswordSolverTest_ValidPatternTest_TestD0Ev called 1 returned 100% blocks executed 100%
        1:    5:TEST(CrosswordSolverTest, ValidPatternTest) {
        1:    5-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN41CrosswordSolverTest_ValidPatternTest_TestD2Ev:
function _ZN41CrosswordSolverTest_ValidPatternTest_TestD2Ev called 1 returned 100% blocks executed 100%
        1:    5:TEST(CrosswordSolverTest, ValidPatternTest) {
        1:    5-block  0
call    0 returned 1
------------------
_ZN41CrosswordSolverTest_ValidPatternTest_Test8TestBodyEv:
function _ZN41CrosswordSolverTest_ValidPatternTest_Test8TestBodyEv called 1 returned 100% blocks executed 26%
        1:    5:TEST(CrosswordSolverTest, ValidPatternTest) {
       1*:    6:    EXPECT_TRUE(isValidPattern("apple"));
        1:    6-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:    6-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:    6-block  2
call    7 returned 1
call    8 returned 1
call    9 returned 1
call   10 returned 1
branch 11 taken 0 (fallthrough)
branch 12 taken 1
    %%%%%:    6-block  3
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:    6-block  4
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:    6-block  5
call   19 never executed
call   20 never executed
branch 21 never executed
branch 22 never executed
    %%%%%:    6-block  6
call   23 never executed
branch 24 never executed
branch 25 never executed
    %%%%%:    6-block  7
call   26 never executed
call   27 never executed
call   28 never executed
        1:    6-block  8
call   29 returned 1
    $$$$$:    6-block  9
    $$$$$:    6-block 10
    $$$$$:    6-block 11
call   30 never executed
    $$$$$:    6-block 12
    $$$$$:    6-block 13
call   31 never executed
    $$$$$:    6-block 14
    $$$$$:    6-block 15
call   32 never executed
    $$$$$:    6-block 16
    $$$$$:    6-block 17
call   33 never executed
       1*:    7:    EXPECT_TRUE(isValidPattern("?pple"));
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:    7-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:    7-block  1
call    7 returned 1
call    8 returned 1
call    9 returned 1
call   10 returned 1
branch 11 taken 0 (fallthrough)
branch 12 taken 1
    %%%%%:    7-block  2
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:    7-block  3
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:    7-block  4
call   19 never executed
call   20 never executed
branch 21 never executed
branch 22 never executed
    %%%%%:    7-block  5
call   23 never executed
branch 24 never executed
branch 25 never executed
    %%%%%:    7-block  6
call   26 never executed
call   27 never executed
call   28 never executed
        1:    7-block  7
call   29 returned 1
    $$$$$:    7-block  8
    $$$$$:    7-block  9
    $$$$$:    7-block 10
call   30 never executed
    $$$$$:    7-block 11
    $$$$$:    7-block 12
call   31 never executed
    $$$$$:    7-block 13
    $$$$$:    7-block 14
call   32 never executed
    $$$$$:    7-block 15
    $$$$$:    7-block 16
call   33 never executed
       1*:    8:    EXPECT_TRUE(isValidPattern("?????"));
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:    8-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:    8-block  1
call    7 returned 1
call    8 returned 1
call    9 returned 1
call   10 returned 1
branch 11 taken 0 (fallthrough)
branch 12 taken 1
    %%%%%:    8-block  2
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:    8-block  3
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:    8-block  4
call   19 never executed
call   20 never executed
branch 21 never executed
branch 22 never executed
    %%%%%:    8-block  5
call   23 never executed
branch 24 never executed
branch 25 never executed
    %%%%%:    8-block  6
call   26 never executed
call   27 never executed
call   28 never executed
        1:    8-block  7
call   29 returned 1
    $$$$$:    8-block  8
    $$$$$:    8-block  9
    $$$$$:    8-block 10
call   30 never executed
    $$$$$:    8-block 11
    $$$$$:    8-block 12
call   31 never executed
    $$$$$:    8-block 13
    $$$$$:    8-block 14
call   32 never executed
    $$$$$:    8-block 15
    $$$$$:    8-block 16
call   33 never executed
       1*:    9:    EXPECT_FALSE(isValidPattern("app1e"));
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:    9-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:    9-block  1
call    7 returned 1
call    8 returned 1
call    9 returned 1
call   10 returned 1
branch 11 taken 0 (fallthrough)
branch 12 taken 1
    %%%%%:    9-block  2
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:    9-block  3
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:    9-block  4
call   19 never executed
call   20 never executed
branch 21 never executed
branch 22 never executed
    %%%%%:    9-block  5
call   23 never executed
branch 24 never executed
branch 25 never executed
    %%%%%:    9-block  6
call   26 never executed
call   27 never executed
call   28 never executed
        1:    9-block  7
call   29 returned 1
    $$$$$:    9-block  8
    $$$$$:    9-block  9
    $$$$$:    9-block 10
call   30 never executed
    $$$$$:    9-block 11
    $$$$$:    9-block 12
call   31 never executed
    $$$$$:    9-block 13
    $$$$$:    9-block 14
call   32 never executed
    $$$$$:    9-block 15
    $$$$$:    9-block 16
call   33 never executed
       1*:   10:    EXPECT_FALSE(isValidPattern("app e"));
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   10-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   10-block  1
call    7 returned 1
call    8 returned 1
call    9 returned 1
call   10 returned 1
branch 11 taken 0 (fallthrough)
branch 12 taken 1
    %%%%%:   10-block  2
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   10-block  3
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   10-block  4
call   19 never executed
call   20 never executed
branch 21 never executed
branch 22 never executed
    %%%%%:   10-block  5
call   23 never executed
branch 24 never executed
branch 25 never executed
    %%%%%:   10-block  6
call   26 never executed
call   27 never executed
call   28 never executed
        1:   10-block  7
call   29 returned 1
    $$$$$:   10-block  8
    $$$$$:   10-block  9
    $$$$$:   10-block 10
call   30 never executed
    $$$$$:   10-block 11
    $$$$$:   10-block 12
call   31 never executed
    $$$$$:   10-block 13
    $$$$$:   10-block 14
call   32 never executed
    $$$$$:   10-block 15
    $$$$$:   10-block 16
call   33 never executed
       1*:   11:    EXPECT_FALSE(isValidPattern(""));
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   11-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   11-block  1
call    7 returned 1
call    8 returned 1
call    9 returned 1
call   10 returned 1
branch 11 taken 0 (fallthrough)
branch 12 taken 1
    %%%%%:   11-block  2
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   11-block  3
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   11-block  4
call   19 never executed
call   20 never executed
branch 21 never executed
branch 22 never executed
    %%%%%:   11-block  5
call   23 never executed
branch 24 never executed
branch 25 never executed
    %%%%%:   11-block  6
call   26 never executed
call   27 never executed
call   28 never executed
        1:   11-block  7
call   29 returned 1
    $$$$$:   11-block  8
    $$$$$:   11-block  9
    $$$$$:   11-block 10
call   30 never executed
    $$$$$:   11-block 11
    $$$$$:   11-block 12
call   31 never executed
    $$$$$:   11-block 13
    $$$$$:   11-block 14
call   32 never executed
    $$$$$:   11-block 15
    $$$$$:   11-block 16
call   33 never executed
        1:   12:}
------------------
        -:   13:
        -:   14:// Тест функции solveCrossword со std::string
        4:   15:TEST(CrosswordSolverTest, SolveCrosswordString) {
        1:   16:    std::string pattern = "?ppl?";
        -:   17:
        7:   18:    std::vector<std::string> dictionary = {"apple", "apply", "ample", "grape"};
        -:   19:
        1:   20:    auto results = solveCrossword(pattern, dictionary);
        -:   21:
        -:   22:
       1*:   23:    EXPECT_NE(std::find(results.begin(), results.end(), "apple"), results.end());
       1*:   24:    EXPECT_NE(std::find(results.begin(), results.end(), "apply"), results.end());
        1:   25:}
------------------
_ZN45CrosswordSolverTest_SolveCrosswordString_TestC2Ev:
function _ZN45CrosswordSolverTest_SolveCrosswordString_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   15:TEST(CrosswordSolverTest, SolveCrosswordString) {
        1:   15-block  0
call    0 returned 1
------------------
_ZN45CrosswordSolverTest_SolveCrosswordString_TestD0Ev:
function _ZN45CrosswordSolverTest_SolveCrosswordString_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   15:TEST(CrosswordSolverTest, SolveCrosswordString) {
        1:   15-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN45CrosswordSolverTest_SolveCrosswordString_TestD2Ev:
function _ZN45CrosswordSolverTest_SolveCrosswordString_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   15:TEST(CrosswordSolverTest, SolveCrosswordString) {
        1:   15-block  0
call    0 returned 1
------------------
_ZN45CrosswordSolverTest_SolveCrosswordString_Test8TestBodyEv:
function _ZN45CrosswordSolverTest_SolveCrosswordString_Test8TestBodyEv called 1 returned 100% blocks executed 38%
        1:   15:TEST(CrosswordSolverTest, SolveCrosswordString) {
        1:   16:    std::string pattern = "?ppl?";
        1:   16-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   16-block  1
        -:   17:
        7:   18:    std::vector<std::string> dictionary = {"apple", "apply", "ample", "grape"};
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   18-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   18-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   18-block  2
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   18-block  3
call   16 returned 1
call   17 returned 1
branch 18 taken 1 (fallthrough)
branch 19 taken 0 (throw)
        4:   18-block  4
call   20 returned 4
        1:   18-block  5
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
    $$$$$:   18-block  6
    $$$$$:   18-block  7
    $$$$$:   18-block  8
call   25 never executed
    $$$$$:   18-block  9
    $$$$$:   18-block 10
    $$$$$:   18-block 11
    $$$$$:   18-block 12
    $$$$$:   18-block 13
        -:   19:
        1:   20:    auto results = solveCrossword(pattern, dictionary);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   21:
        -:   22:
       1*:   23:    EXPECT_NE(std::find(results.begin(), results.end(), "apple"), results.end());
        1:   23-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   23-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   23-block  2
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1
    %%%%%:   23-block  3
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:   23-block  4
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   23-block  5
call   19 never executed
branch 20 never executed
branch 21 never executed
    %%%%%:   23-block  6
call   22 never executed
call   23 never executed
        1:   23-block  7
call   24 returned 1
    $$$$$:   23-block  8
    $$$$$:   23-block  9
    $$$$$:   23-block 10
call   25 never executed
    $$$$$:   23-block 11
    $$$$$:   23-block 12
call   26 never executed
    $$$$$:   23-block 13
    $$$$$:   23-block 14
call   27 never executed
       1*:   24:    EXPECT_NE(std::find(results.begin(), results.end(), "apply"), results.end());
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   24-block  0
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   24-block  1
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1
    %%%%%:   24-block  2
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:   24-block  3
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   24-block  4
call   19 never executed
branch 20 never executed
branch 21 never executed
    %%%%%:   24-block  5
call   22 never executed
call   23 never executed
        1:   24-block  6
call   24 returned 1
    $$$$$:   24-block  7
    $$$$$:   24-block  8
    $$$$$:   24-block  9
call   25 never executed
    $$$$$:   24-block 10
    $$$$$:   24-block 11
call   26 never executed
    $$$$$:   24-block 12
    $$$$$:   24-block 13
call   27 never executed
        1:   25:}
call    0 returned 1
call    1 returned 1
call    2 returned 1
    $$$$$:   25-block  0
call    3 never executed
    $$$$$:   25-block  1
call    4 never executed
    $$$$$:   25-block  2
call    5 never executed
------------------
        -:   26:
        -:   27:// Тест функции solveCrossword с C строкой
        4:   28:TEST(CrosswordSolverTest, SolveCrosswordCString) {
        1:   29:    const char* pattern = "?ppl?";
        -:   30:
        7:   31:    std::vector<std::string> dictionary = {"apple", "apply", "ample", "grape"};
        -:   32:
        1:   33:    auto results = solveCrossword(pattern, dictionary);
        -:   34:
       1*:   35:    EXPECT_NE(std::find(results.begin(), results.end(), "apple"), results.end());
       1*:   36:    EXPECT_NE(std::find(results.begin(), results.end(), "apply"), results.end());
        1:   37:}
------------------
_ZN46CrosswordSolverTest_SolveCrosswordCString_TestC2Ev:
function _ZN46CrosswordSolverTest_SolveCrosswordCString_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   28:TEST(CrosswordSolverTest, SolveCrosswordCString) {
        1:   28-block  0
call    0 returned 1
------------------
_ZN46CrosswordSolverTest_SolveCrosswordCString_TestD0Ev:
function _ZN46CrosswordSolverTest_SolveCrosswordCString_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   28:TEST(CrosswordSolverTest, SolveCrosswordCString) {
        1:   28-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN46CrosswordSolverTest_SolveCrosswordCString_TestD2Ev:
function _ZN46CrosswordSolverTest_SolveCrosswordCString_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   28:TEST(CrosswordSolverTest, SolveCrosswordCString) {
        1:   28-block  0
call    0 returned 1
------------------
_ZN46CrosswordSolverTest_SolveCrosswordCString_Test8TestBodyEv:
function _ZN46CrosswordSolverTest_SolveCrosswordCString_Test8TestBodyEv called 1 returned 100% blocks executed 38%
        1:   28:TEST(CrosswordSolverTest, SolveCrosswordCString) {
        1:   29:    const char* pattern = "?ppl?";
        -:   30:
        7:   31:    std::vector<std::string> dictionary = {"apple", "apply", "ample", "grape"};
        1:   31-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   31-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   31-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   31-block  3
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   31-block  4
call   16 returned 1
call   17 returned 1
branch 18 taken 1 (fallthrough)
branch 19 taken 0 (throw)
        4:   31-block  5
call   20 returned 4
        1:   31-block  6
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
    $$$$$:   31-block  7
    $$$$$:   31-block  8
    $$$$$:   31-block  9
call   25 never executed
    $$$$$:   31-block 10
    $$$$$:   31-block 11
    $$$$$:   31-block 12
    $$$$$:   31-block 13
    $$$$$:   31-block 14
        -:   32:
        1:   33:    auto results = solveCrossword(pattern, dictionary);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   34:
       1*:   35:    EXPECT_NE(std::find(results.begin(), results.end(), "apple"), results.end());
        1:   35-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   35-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   35-block  2
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1
    %%%%%:   35-block  3
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:   35-block  4
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   35-block  5
call   19 never executed
branch 20 never executed
branch 21 never executed
    %%%%%:   35-block  6
call   22 never executed
call   23 never executed
        1:   35-block  7
call   24 returned 1
    $$$$$:   35-block  8
    $$$$$:   35-block  9
    $$$$$:   35-block 10
call   25 never executed
    $$$$$:   35-block 11
    $$$$$:   35-block 12
call   26 never executed
    $$$$$:   35-block 13
    $$$$$:   35-block 14
call   27 never executed
       1*:   36:    EXPECT_NE(std::find(results.begin(), results.end(), "apply"), results.end());
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   36-block  0
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   36-block  1
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1
    %%%%%:   36-block  2
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:   36-block  3
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   36-block  4
call   19 never executed
branch 20 never executed
branch 21 never executed
    %%%%%:   36-block  5
call   22 never executed
call   23 never executed
        1:   36-block  6
call   24 returned 1
    $$$$$:   36-block  7
    $$$$$:   36-block  8
    $$$$$:   36-block  9
call   25 never executed
    $$$$$:   36-block 10
    $$$$$:   36-block 11
call   26 never executed
    $$$$$:   36-block 12
    $$$$$:   36-block 13
call   27 never executed
        1:   37:}
call    0 returned 1
call    1 returned 1
    $$$$$:   37-block  0
call    2 never executed
    $$$$$:   37-block  1
call    3 never executed
------------------
        -:   38:
        -:   39:// Тест на некорректный шаблон
        4:   40:TEST(CrosswordSolverTest, InvalidPatternTest) {
        1:   41:    std::string pattern = "app1e";
        -:   42:
        7:   43:    std::vector<std::string> dictionary = {"apple", "apply", "ample", "grape"};
        -:   44:
       1*:   45:    EXPECT_THROW(solveCrossword(pattern, dictionary), std::invalid_argument);
        1:   46:}
------------------
_ZN43CrosswordSolverTest_InvalidPatternTest_TestC2Ev:
function _ZN43CrosswordSolverTest_InvalidPatternTest_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   40:TEST(CrosswordSolverTest, InvalidPatternTest) {
        1:   40-block  0
call    0 returned 1
------------------
_ZN43CrosswordSolverTest_InvalidPatternTest_TestD0Ev:
function _ZN43CrosswordSolverTest_InvalidPatternTest_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   40:TEST(CrosswordSolverTest, InvalidPatternTest) {
        1:   40-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN43CrosswordSolverTest_InvalidPatternTest_TestD2Ev:
function _ZN43CrosswordSolverTest_InvalidPatternTest_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   40:TEST(CrosswordSolverTest, InvalidPatternTest) {
        1:   40-block  0
call    0 returned 1
------------------
_ZN43CrosswordSolverTest_InvalidPatternTest_Test8TestBodyEv:
function _ZN43CrosswordSolverTest_InvalidPatternTest_Test8TestBodyEv called 1 returned 100% blocks executed 35%
        1:   40:TEST(CrosswordSolverTest, InvalidPatternTest) {
        1:   41:    std::string pattern = "app1e";
        1:   41-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   41-block  1
        -:   42:
        7:   43:    std::vector<std::string> dictionary = {"apple", "apply", "ample", "grape"};
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   43-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   43-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   43-block  2
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   43-block  3
call   16 returned 1
call   17 returned 1
branch 18 taken 1 (fallthrough)
branch 19 taken 0 (throw)
        4:   43-block  4
call   20 returned 4
        1:   43-block  5
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
    $$$$$:   43-block  6
    $$$$$:   43-block  7
    $$$$$:   43-block  8
call   25 never executed
    $$$$$:   43-block  9
    $$$$$:   43-block 10
    $$$$$:   43-block 11
    $$$$$:   43-block 12
    $$$$$:   43-block 13
        -:   44:
       1*:   45:    EXPECT_THROW(solveCrossword(pattern, dictionary), std::invalid_argument);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        1:   45-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   45-block  1
branch  7 taken 1 (fallthrough)
branch  8 taken 0
        1:   45-block  2
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1 (throw)
    %%%%%:   45-block  3
call   12 never executed
        1:   45-block  4
branch 13 taken 0 (fallthrough)
branch 14 taken 1
    %%%%%:   45-block  5
call   15 never executed
branch 16 never executed
branch 17 never executed
    %%%%%:   45-block  6
    %%%%%:   45-block  7
call   18 never executed
branch 19 never executed
branch 20 never executed
    %%%%%:   45-block  8
call   21 never executed
call   22 never executed
branch 23 never executed
branch 24 never executed
    %%%%%:   45-block  9
call   25 never executed
branch 26 never executed
branch 27 never executed
    %%%%%:   45-block 10
call   28 never executed
call   29 never executed
        1:   45-block 11
call   30 returned 1
        1:   45-block 12
branch 31 taken 1
branch 32 taken 0
branch 33 taken 0
        1:   45-block 13
call   34 returned 1
call   35 returned 1
    $$$$$:   45-block 14
call   36 never executed
call   37 never executed
branch 38 never executed
branch 39 never executed
    $$$$$:   45-block 15
call   40 never executed
branch 41 never executed
branch 42 never executed
    $$$$$:   45-block 16
call   43 never executed
branch 44 never executed
branch 45 never executed
    $$$$$:   45-block 17
call   46 never executed
call   47 never executed
branch 48 never executed
branch 49 never executed
    $$$$$:   45-block 18
call   50 never executed
call   51 never executed
branch 52 never executed
branch 53 never executed
    $$$$$:   45-block 19
call   54 never executed
branch 55 never executed
branch 56 never executed
    $$$$$:   45-block 20
call   57 never executed
    $$$$$:   45-block 21
call   58 never executed
call   59 never executed
branch 60 never executed
branch 61 never executed
    $$$$$:   45-block 22
call   62 never executed
branch 63 never executed
branch 64 never executed
    $$$$$:   45-block 23
call   65 never executed
    $$$$$:   45-block 24
    $$$$$:   45-block 25
call   66 never executed
    $$$$$:   45-block 26
call   67 never executed
    $$$$$:   45-block 27
call   68 never executed
    $$$$$:   45-block 28
    $$$$$:   45-block 29
call   69 never executed
    $$$$$:   45-block 30
    $$$$$:   45-block 31
call   70 never executed
        1:   46:}
call    0 returned 1
call    1 returned 1
    $$$$$:   46-block  0
call    2 never executed
    $$$$$:   46-block  1
call    3 never executed
------------------
        -:   47:
function main called 1 returned 100% blocks executed 100%
        1:   48:int main(int argc, char **argv) {
        1:   49:    testing::InitGoogleTest(&argc, argv);
        1:   49-block  0
call    0 returned 1
        1:   50:    return RUN_ALL_TESTS();
call    0 returned 1
        -:   51:}
